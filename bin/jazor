#!/usr/bin/env ruby

require 'optparse'

$:.push File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'jazor'


options = {
  :tests => []
}

OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options] [source] [slice]\n" \
  + "Example: #{$0} http://example.com/example.json a.b.c"

  opts.on('-t', '--test EXPRESSION', 'Test expression') do |opt|
    options[:tests] << opt
  end

end.parse!

begin
  jazor = Jazor::Jazor.new(ARGV[0].nil? ? {} : ARGV[0])
  slices = ARGV.length > 1 ? ARGV[1..ARGV.length] : [nil]
  slices.each do |slice|
    value = jazor.get_slice(slice)
    if value.is_a?(Jazor::JObject)
      pp value.to_hash
    else
      pp value
    end
  end

rescue StandardError => e
  puts "Error: #{e}"
  exit(1)
end

options[:tests].each do |test|
  print "Test: %s" % test
  if jazor.data.instance_eval(test)
    puts " (Passed)"
  else
    puts " (Failed)"
    exit(1)
  end
end
